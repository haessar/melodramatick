"""
Django settings for melodramatick project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import datetime
import os
import os.path
from pathlib import Path

from decouple import UndefinedValueError, config
from django.core.management.utils import get_random_secret_key
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("DJANGO_SECRET_KEY", default=get_random_secret_key())

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default=False, cast=bool)

try:
    ALLOWED_HOSTS = config("DJANGO_ALLOWED_HOSTS").split(",")
except UndefinedValueError:
    ALLOWED_HOSTS = []

CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# Application definition

INSTALLED_APPS = [
    'adminactions',
    'melodramatick',
    'melodramatick.accounts',
    'melodramatick.composer',
    'melodramatick.listen',
    'melodramatick.performance',
    'melodramatick.top_list',
    'melodramatick.work',
    'clearcache',
    'dal',
    'dal_select2',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.humanize',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.forms',
    'django_tables2',
    'django_filters',
    'django_celery_results',
    'django_admin_listfilter_dropdown',
    'bootstrap4',
    'crispy_forms',
    'mathfilters',
    'polymorphic',
    'notifications',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.sites.middleware.CurrentSiteMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'login_required.middleware.LoginRequiredMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'melodramatick.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

FORM_RENDERER = 'django.forms.renderers.TemplatesSetting'

WSGI_APPLICATION = 'melodramatick.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DEVELOPMENT_MODE = config("DEVELOPMENT_MODE", default=False, cast=bool)
if DEVELOPMENT_MODE is True:
    INTERNAL_IPS = [
        "127.0.0.1",
    ]

    MIDDLEWARE = ["debug_toolbar.middleware.DebugToolbarMiddleware"] + MIDDLEWARE

    INSTALLED_APPS.extend(('debug_toolbar', 'pympler'))

if config("DATABASE_URL", default=None) is None:
    # raise Exception("DATABASE_URL environment variable not defined")
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.mysql",
            "NAME": "dummy_melodramatick",
            "USER": "root",
            "PASSWORD": "123abc",
            "HOST": "127.0.0.1",
            "PORT": "3306",
        }
    }
else:
    DATABASES = {
        "default": dj_database_url.parse(config("DATABASE_URL"))
    }


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'accounts.CustomUser'


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-uk'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_ROOT = '/var/www/melodramatick/static'
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / __package__ / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'

# LoginRequiredMiddleware options

LOGIN_REQUIRED_IGNORE_PATHS = [
    r'/accounts/login/$',
    r'/accounts/logout/$',
    r'/accounts/signup/$',
    r'/admin/$',
]

LOGIN_REQUIRED_IGNORE_VIEW_NAMES = [
    'home',
    'login',
]


# APIs

SPOTIFY_CLIENT_ID = config('SPOTIFY_CLIENT_ID', default='')
SPOTIFY_CLIENT_SECRET = config('SPOTIFY_CLIENT_SECRET', default='')

RAPID_API_KEY = config('RAPID_API_KEY', default='')


# Logging

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "WARNING",
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": os.getenv("DJANGO_LOG_LEVEL", "INFO"),
            "propagate": False,
        },
    },
}


# Caching

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

DEBUG_TOOLBAR_PANELS = (
    'debug_toolbar.panels.timer.TimerPanel',
    'pympler.panels.MemoryPanel',
    'debug_toolbar.panels.profiling.ProfilingPanel'
    )

# Site-specific settings

SITE = __package__.title()
SITE_ID = 1


WORK_MODEL = 'work.Work'
WORK_PLURAL_LABEL = 'works'

YEAR_CHOICES = []
for r in range(1500, (datetime.datetime.now().year+1)):
    YEAR_CHOICES.append((r, r))

ERAS_MAP = (
    ("1598-1749", "Baroque"),
    ("1750-1809", "Classical"),
    ("1810-1839", "Early Romantic"),
    ("1840-1879", "Romantic"),
    ("1880-1914", "Late Romantic"),
    ("1915-1975", "Modern"),
    ("1976-{}".format(datetime.datetime.now().year), "Contemporary"),
)

AWARD_LEVEL_PLATINUM_HEX = "#E5E4E2"
AWARD_LEVEL_GOLD_HEX = "#FFD700"
AWARD_LEVEL_SILVER_HEX = "#AAA9AD"
AWARD_LEVEL_BRONZE_HEX = "#CD7F32"

STREAMED_COLOUR = "#d3d3d3"

VERBOSE_TITLE = False
